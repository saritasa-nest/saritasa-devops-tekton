apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: buildpack-jekyll-build-pipeline
spec:
  description: >-
    Pipeline will only build the image utilizing buildpacks and then send notification via slack.
    The deployment is done via argocd

  params:
    - name: application
      type: string
    - name: project
      type: string
      default: "" # set to empty default to accomodate currently running triggers
    - name: sha
      type: string
    - name: head_commit
      type: string
    - name: head_commit_message
      type: string
    - name: pusher_name
      type: string
    - name: pusher_email
      type: string
    - name: pusher_avatar
      type: string
    - name: pusher_url
      type: string
    - name: repository_url
      type: string
    - name: repository_ssh_url
      type: string
    - name: branch
      type: string
    - name: buildpack_builder_image
      type: string
    - name: buildpack_runner_image
      type: string
    - name: docker_registry
      type: string
    - name: docker_registry_repository
      type: string
    - name: environment
      type: string
    - name: source_subpath
      type: string
      default: ""
    - name: kubernetes_repository_kustomize_path
      type: string
      default: ".kubernetes/manifests/dev"
    - name: kubernetes_branch
      type: string
      default: main
    - name: platform_dir
      type: string
      default: "platform"

  workspaces:
    - name: source

  resources:
    - name: app
      type: git
    - name: kubernetes-repo
      type: git
    - name: image
      type: image

  tasks:
    - name: set-env-vars
      taskRef:
        name: set-env-vars
      resources:
        inputs:
          - name: app
            resource: app
      params:
        - name: application
          value: "$(params.application)"
        - name: environment
          value: "$(params.environment)"
        - name: platform_dir
          value: "$(params.platform_dir)"
      workspaces:
        - name: source
          workspace: source

    - name: buildpack-jekyll
      taskRef:
        name: buildpack-jekyll
      resources:
          inputs:
            - name: app
              resource: app
          outputs:
              - name: image
                resource: image
      params:
        - name: application
          value: "$(params.application)"
        - name: builder_image
          value: "$(params.buildpack_builder_image)"
        - name: run_image
          value: "$(params.buildpack_runner_image)"
        - name: docker_registry
          value: $(params.docker_registry)
        - name: cache
          value: $(params.application)-buildpacks-cache
        - name: environment
          value: "$(params.environment)"
        - name: source_subpath
          value: "$(params.source_subpath)"
        - name: platform_dir
          value: "$(params.platform_dir)"
      workspaces:
        - name: source
          workspace: source
      runAfter:
        - set-env-vars

    - name: kustomize
      taskRef:
        name: kustomize
      resources:
        inputs:
          - name: kubernetes-repo
            resource: kubernetes-repo
      params:
        - name: application
          value: "$(params.application)"
        - name: project
          value: "$(params.project)"
        - name: branch
          value: $(params.branch)
        - name: image
          value: "$(params.docker_registry_repository):$(params.environment)-$(params.sha)"
        - name: kustomize_overlay_path
          value: "$(params.kubernetes_repository_kustomize_path)"
        - name: kubernetes_branch
          value: "$(params.kubernetes_branch)"
        - name: environment
          value: "$(params.environment)"
      runAfter:
        - buildpack-jekyll

    - name: argocd-deploy
      taskRef:
        name: argocd-deploy
      params:
        - name : application
          value: "$(params.application)"
        - name: environment
          value: "$(params.environment)"
      runAfter: 
        - kustomize

  finally:
    - name: slack-notification
      taskRef:
        name: slack-notification
      params:
        - name: application
          value: "$(params.application)"
        - name: sha
          value: "$(params.sha)"
        - name: head_commit
          value: "$(params.head_commit)"
        - name: head_commit_message
          value: "$(params.head_commit_message)"
        - name: pusher_name
          value: "$(params.pusher_name)"
        - name: pusher_email
          value: "$(params.pusher_email)"
        - name: pusher_avatar
          value: "$(params.pusher_avatar)"
        - name: pusher_url
          value: "$(params.pusher_url)"
        - name: repository_url
          value: "$(params.repository_url)"
        - name: branch
          value: "$(params.branch)"
        - name: environment
          value: "$(params.environment)"
        - name: status
          value: "$(tasks.argocd-deploy.status)"
