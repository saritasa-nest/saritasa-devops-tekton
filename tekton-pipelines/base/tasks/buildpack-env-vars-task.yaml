apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: set-env-vars
spec:
  description: >-
    The task parses project.toml file and stores its environment variables
    values to platform dir for further processing by buildpack task.

  workspaces:
    - name: source

  resources:
    inputs:
      - name: app
        type: git

  params:
    - name: application
      description: The name of the application being built
    - name: environment
    - name: platform_dir
      description: The name of the platform directory.

  steps:
    # I dislike this hack
    # https://github.com/tektoncd/catalog/blob/main/task/buildpacks/0.3/buildpacks.yaml#L68-L113
    # but we should use it until this is resolved:
    # - https://github.com/buildpacks/tekton-integration/issues/33
    # - https://github.com/buildpacks/tekton-integration/issues/32
    # TODO: check in the future and adjust when project.toml is clear to be supported.
    - name: set-env-vars
      image: saritasallc/python3:0.1@sha256:cb4be451c918cbd924e5380b1027afa66e232c8524e75afd4c2c771df213210e
      script: |
        #!/usr/bin/env python3
        import toml, os, sys

        source_path = "$(resources.inputs.app.path)/project.toml"
        env_dir = "$(workspaces.source.path)/$(params.platform_dir)/env"

        try:
          with open(source_path, "r") as f:
            settings = toml.load(f)
        except FileNotFoundError:
          quit()
        except Exception as e:
          raise Exception("Unable to parse project.toml file\nTraceback: {e}")

        env_vars = settings.get("build", {}).get("env", [])
        env_vars = {item["name"]: item["value"] for item in env_vars}

        # create directory if not exists
        if env_vars and not os.path.exists(env_dir):
            os.makedirs(env_dir)

        # create env variables files
        for name, value in env_vars.items():
          with open(f"{env_dir}/{name}", "w") as f:
            f.write(value)
            print(
              f"Created `{env_dir}/{name}` var file with `{value}` value",
              file=sys.stdout
            )
