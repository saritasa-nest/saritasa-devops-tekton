apiVersion: tekton.dev/v1beta1
kind: Task
metadata:     
  name: slack-notification
spec:
  description: >-
    Send slack notification with various information about pipeline progress/result.
    You can see my question about dealing with task status here: https://github.com/tektoncd/pipeline/issues/3762

  params:
    - name: application
    - name: sha
    - name: head_commit
    - name: head_commit_message
    - name: pusher_name
    - name: pusher_email
    - name: pusher_avatar
    - name: pusher_url
    - name: repository_url
    - name: environment
    - name: branch
    - name: status
    - name: pipelinerun_name
      default: "reserved"

  results:
    - name: failed_info
      description: Info about failed build.
    - name: failed_task
      description: Name of a failed task.
    - name: failed_step
      description: Name of a failed step.
    - name: logs
      description: Failed pod logs.

  stepTemplate:
    envFrom:
      - configMapRef:
          name: $(params.application)-build-pipeline-config
      - secretRef:
          name: $(params.application)-slack-secret  # used for webhook URL

    env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
    volumeMounts:
      - name: podinfo
        mountPath: /etc/podinfo

  steps:
    - name: get-failed-info
      image: bitnami/kubectl:latest
      script: |
        #!/bin/sh

        pipelinerun_name=$(awk -F= '/tekton.dev\/pipelineRun/ {gsub(/"/, "", $2);print $2}' /etc/podinfo/labels)

        # get failed info from pipelinerun name
        kubectl -n ci get pipelinerun $pipelinerun_name -o json |
          jq '[.status.taskRuns | to_entries[] | select ( .value.status.conditions[0].reason == "Failed") |
          { task: .value.pipelineTaskName, pod: .value.status.podName, steps: .value.status.steps[] } |
          select (.steps.terminated.reason == "Error")][0] | { task: .task, pod: .pod, step: .steps.name }' \
          > $(results.failed_info.path)

        failed_pod_name=$(cat $(results.failed_info.path) | jq '.pod' -r)
        failed_task=$(cat $(results.failed_info.path) | jq '.task' -r)
        failed_step=$(cat $(results.failed_info.path) | jq '.step' -r)

        if [ "$failed_pod_name" != "null" ] && [ "$failed_step" != "null" ]; then
          kubectl -n ci logs $failed_pod_name -c step-$failed_step | tail -c 1982 > $(results.logs.path)
          echo $failed_task > $(results.failed_task.path)
          echo $failed_step > $(results.failed_step.path)
        fi

    - name: notification
      image: cloudposse/slack-notifier:0.4.0
      script: |
        #!/bin/sh

        # tekton injects these labels into pods
        # https://tekton.dev/docs/pipelines/labels/
        # so we can easily extract items
        # podinfo is mounted in TriggerTemplate
        pipelinerun_name=$(awk -F= '/tekton.dev\/pipelineRun/ {gsub(/"/, "", $2);print $2}' /etc/podinfo/labels)
        status="`echo $(params.status) | tr '[:upper:]' '[:lower:]'`"

        echo "result: $status"

        if [ "$status" = "succeeded" ]; then
          color="good"
          thumb_url="$(params.pusher_avatar)"
          text_status="The latest changes to $(params.environment) have been deployed successfully"

        else
          color="danger"
          thumb_url="$SLACK_FAILURE_ICON_URL"
          text_status="The latest changes to $(params.environment) failed to be deployed"
          failed_task=$(cat $(results.failed_task.path))
          failed_step=$(cat $(results.failed_step.path))
          failed="Task: $failed_task, Step: $failed_step"
          error_msg=$(tail -c 1982 $(results.logs.path))
        fi

        argo_app_url="$ARGOCD_SERVER/$ARGOCD_ROOT_PATH/applications/$(params.application)"
        argo_app_url=$(echo $argo_app_url | sed 's/\/\//\//g')
        argo_app_url="https://$argo_app_url"

        slack-notifier \
        -user_name "Tekton" \
        -icon_emoji ":white_check_mark:" \
        -color "$color" \
        -author_name "[$(params.application)] by $(params.pusher_name)" \
        -author_link "$(params.pusher_url)" \
        -title "$(params.head_commit_message)" \
        -text "$text_status" \
        -thumb_url "$thumb_url" \
        -field1_title "Open Application" \
        -field1_value "<$APPLICATION_URL|$APPLICATION_URL>" \
        -field1_short false \
        -field2_title "Branch" \
        -field2_value "$(echo $(params.branch) | sed -r 's/\brefs\/\bheads\///g')" \
        -field2_short true \
        -field3_title "Revision" \
        -field3_value "<$(params.repository_url)/commit/$(params.sha)|$(params.sha)>" \
        -field3_short true \
        -field4_title "Manage" \
        -field4_value "<$(params.repository_url)|Github> | <$(params.repository_url)/issues|Issues> | <$JIRA_PROJECT_URL|Jira> | <$TEKTON_URL/$pipelinerun_name|CI> | <$argo_app_url|CD> " \
        -field4_short false \
        -field5_title "Failure info" \
        -field5_value "$failed" \
        -field5_short false \
        -field6_title "Traceback" \
        -field6_value "$error_msg" \
        -field6_short false
