apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: kustomize
spec:
  description: >-
    Updates image tag in the kustomize overlay of the app

  resources:
    inputs:
      - name: kubernetes-repo
        type: git

  params:
    - name: application
    - name: project
    - name: branch
      description: git branch
    - name: image
      description: New image for the application
    - name: kustomize_overlay_path
      description: Overlay path for kustomize call
    - name: kubernetes_branch
      default: "main"
    - name: environment
  
  stepTemplate:
    envFrom:
      - configMapRef:
          name: $(params.application)-build-pipeline-config # project specific values

  steps:
    - name: prepare
      image: alpine/git
      script: |
        cd $(inputs.resources.kubernetes-repo.path)
        git config user.email "$DEVOPS_GROUP_EMAIL"
        git config user.name "tekton-kustomize"

    - name: update
      image: k8s.gcr.io/kustomize/kustomize:v3.8.7
      script: |
        app=$(params.application)
        env=$(params.environment)
        application=${app%-$env}
        cd $(inputs.resources.kubernetes-repo.path)/$(params.kustomize_overlay_path) && /app/kustomize edit set image $application=$(params.image)
    
    - name: push
      image: alpine/git
      script: |
        cd $(inputs.resources.kubernetes-repo.path)
        git checkout $(params.kubernetes_branch)

        # apply changes only if it exists, otherwise do nothing
        if [ "`git status --porcelain`" = "" ]; then
          echo "There are no changes, nothing to commit"
          exit
        fi

        # define retry delays appropriate for dash
        set -- "0" "1" "3" "5"
        for DELAY
        do
          if [ "$DELAY" != "0" ]; then
            echo "retry in ${DELAY}s"
          fi
          sleep $DELAY

          # check whether there are changes between local and remote
          git fetch origin $(params.kubernetes_branch)
          LOCAL_COMMIT=`git rev-parse @`
          REMOTE_COMMIT=`git rev-parse origin/$(params.kubernetes_branch)`
          if [ $LOCAL_COMMIT != $REMOTE_COMMIT ]; then
            echo "Need to pull new changes"
            git pull --rebase origin $(params.kubernetes_branch)
          fi

          git commit -am "feat: $(params.environment) argocd deployment $(params.kustomize_overlay_path), new image: $(params.image)"
          git push origin HEAD:$(params.kubernetes_branch) && break || true
        done
